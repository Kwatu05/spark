# Default values for spark
replicaCount: 1

image:
  repository: ghcr.io/kwatu05/spark
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: app.spark.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: spark-tls-secret
      hosts:
        - app.spark.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Backend configuration
backend:
  replicaCount: 3
  image:
    repository: ghcr.io/kwatu05/spark-backend
    tag: "latest"
  service:
    type: ClusterIP
    port: 4000
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Frontend configuration
frontend:
  replicaCount: 2
  image:
    repository: ghcr.io/kwatu05/spark-frontend
    tag: "latest"
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "redis-password"
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres-password"
    username: "spark"
    password: "spark-password"
    database: "spark"
  primary:
    persistence:
      enabled: true
      size: 20Gi

# Environment variables
env:
  NODE_ENV: "production"
  PORT: "4000"
  HOST: "0.0.0.0"

# Secrets
secrets:
  jwtSecret: "your-jwt-secret"
  jwtRefreshSecret: "your-jwt-refresh-secret"
  vapidPublicKey: "your-vapid-public-key"
  vapidPrivateKey: "your-vapid-private-key"

# Persistent volumes
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
